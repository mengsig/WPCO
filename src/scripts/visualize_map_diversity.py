import numpy as np
import matplotlib.pyplot as plt
import sys
import os

# Append the utils directory to the system path for importing
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "../../")))
from src.algorithms.rl_agent_parallel import random_seeder

def visualize_map_diversity():
    """Show the diversity of maps generated by random_seeder."""
    
    fig, axes = plt.subplots(3, 4, figsize=(16, 12))
    axes = axes.flatten()
    
    print("Generating 12 random maps to show diversity...")
    
    for i in range(12):
        # Generate a random map
        map_size = 64
        weighted_matrix = random_seeder(map_size, time_steps=100000)
        
        # Plot it
        ax = axes[i]
        im = ax.imshow(weighted_matrix, cmap='hot')
        ax.set_title(f'Map {i+1}')
        ax.axis('off')
        
        # Print statistics
        print(f"\nMap {i+1} statistics:")
        print(f"  Min value: {weighted_matrix.min():.2f}")
        print(f"  Max value: {weighted_matrix.max():.2f}")
        print(f"  Mean value: {weighted_matrix.mean():.2f}")
        print(f"  Std dev: {weighted_matrix.std():.2f}")
        print(f"  Number of hotspots (>90th percentile): {(weighted_matrix > np.percentile(weighted_matrix, 90)).sum()}")
    
    plt.suptitle('Diversity of Generated Training Maps', fontsize=16)
    plt.tight_layout()
    plt.savefig('map_diversity.png', dpi=150)
    plt.show()
    
    # Show how different the maps are from each other
    print("\n" + "="*60)
    print("MAP DIVERSITY ANALYSIS")
    print("="*60)
    
    # Generate 100 maps and analyze their diversity
    n_maps = 100
    maps = []
    for _ in range(n_maps):
        maps.append(random_seeder(32, time_steps=10000).flatten())  # Smaller for memory
    
    maps = np.array(maps)
    
    # Calculate pairwise correlations
    correlations = []
    for i in range(n_maps):
        for j in range(i+1, n_maps):
            corr = np.corrcoef(maps[i], maps[j])[0, 1]
            correlations.append(corr)
    
    print(f"\nAnalyzed {n_maps} maps:")
    print(f"  Average correlation between maps: {np.mean(correlations):.3f}")
    print(f"  Std dev of correlations: {np.std(correlations):.3f}")
    print(f"  Min correlation: {np.min(correlations):.3f}")
    print(f"  Max correlation: {np.max(correlations):.3f}")
    
    # Plot correlation distribution
    fig2, ax2 = plt.subplots(figsize=(8, 6))
    ax2.hist(correlations, bins=50, alpha=0.7, edgecolor='black')
    ax2.axvline(x=np.mean(correlations), color='red', linestyle='--', 
                label=f'Mean: {np.mean(correlations):.3f}')
    ax2.set_xlabel('Correlation Coefficient')
    ax2.set_ylabel('Frequency')
    ax2.set_title(f'Pairwise Correlations Between {n_maps} Random Maps')
    ax2.legend()
    ax2.grid(True, alpha=0.3)
    
    plt.tight_layout()
    plt.savefig('map_correlation_distribution.png', dpi=150)
    plt.show()
    
    print("\nConclusion: Low correlations indicate high diversity in training maps!")

if __name__ == "__main__":
    visualize_map_diversity()